name: Deploy to EC2

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: gradlew 실행 권한 부여
        run: chmod +x ./gradlew
        shell: bash

      - name: envsubst 설치
        run: sudo apt-get install -y gettext

      - name: application.yml 생성
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.DB_YML }}" | base64 --decode > src/main/resources/application.yml
          find src

      - name: Gradle 빌드
        run: ./gradlew clean build
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USER_NAME: ${{ secrets.DB_USER_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: 현재 시간 가져오기
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: 현재 시간 출력
        run: echo "현재 시간=${{steps.current-time.outputs.formattedTime}}"
        shell: bash

      - name: AWS 자격 증명 구성
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: EC2에 배포
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -i private_key -o StrictHostKeyChecking=no build/libs/back-0.0.1-SNAPSHOT.jar ${USER}@${HOST}:~/app.jar
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} '
            # Java 애플리케이션 중지 및 업데이트
            sudo systemctl stop myapp || true
            sudo mkdir -p /opt/myapp
            sudo mv ~/app.jar /opt/myapp/app.jar
            sudo chown myappuser:myappuser /opt/myapp/app.jar
          
            # Java 애플리케이션 서비스 파일 업데이트
            echo "[Unit]
            Description=Java Application
            After=network.target
          
            [Service]
            ExecStart=/usr/bin/java -jar /opt/myapp/app.jar
            User=myappuser
            Environment=\"DB_URL=${{ secrets.DB_URL }}\"
            Environment=\"DB_USER_NAME=${{ secrets.DB_USER_NAME }}\"
            Environment=\"DB_PASSWORD=${{ secrets.DB_PASSWORD }}\"
          
            [Install]
            WantedBy=multi-user.target" | sudo tee /etc/systemd/system/myapp.service
          
            # Java 애플리케이션 시작
            sudo systemctl daemon-reload
            sudo systemctl start myapp
            sudo systemctl enable myapp
          '

      - name: 정리
        if: always()
        run: rm -f private_key